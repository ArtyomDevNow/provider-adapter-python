name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ph/${{ github.event.repository.name }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and run Docker containers
        run: |
          docker-compose build
          docker-compose up -d

      - name: Publish Docker images
        run: |
          docker-compose push

      - name: cosign-installer
        uses: sigstore/cosign-installer@v2.0.0

      - name: Write private key to file
        run: |
          echo "$KEY" > cosign.key
          chmod 400 cosign.key

      - name: Sign Docker images
        id: sign
        run: |
          export COSIGN_EXPERIMENTAL=1
          export COSIGN_REPOSITORY_PASSPHRASE=${{ secrets.COSIGN_PASSWORD }}
          export COSIGN_TUF_SERVER=https://tuf.sigstore.dev
          sigstore/cosign sign -key cosign.key -a ghcr.io/${{ env.IMAGE_NAME }}:tag

      - name: Show signed tag
        run: |
          echo "Signed tag: ghcr.io/${{ env.IMAGE_NAME }}:tag"

#      - name: Install cosign
#        uses: sigstore/cosign-installer@v2.0.0
#
#      - name: Write signing key to disk
#        run: 'echo "$KEY" > cosign.key'
#        shell: bash
#        env:
#          KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
#
#      - name: Sign the published Docker Image
#        env:
#          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
#        run: cosign sign --key cosign.key ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}
